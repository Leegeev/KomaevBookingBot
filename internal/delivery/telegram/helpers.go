package telegram

import (
	"context"
	"fmt"
	"strings"
	"time"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

type UserID = int64

const AdminID int64 = 123456789 // TODO: –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

type bookingSession struct {
	BookState int64
	ChatID    int64
	UserID    int64
	MessageID int64 // —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º
	RoomID    string
	RoomName  string
	Date      time.Time // –±–µ–∑ –≤—Ä–µ–º–µ–Ω–∏, –ª–æ–∫–∞–ª—å –æ—Ñ–∏—Å–∞
	StartTime time.Time // –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π time —Å –¥–∞—Ç–æ–π+–≤—Ä–µ–º–µ–Ω–µ–º
	EndTime   time.Time
	Duration  time.Duration
}

// Roles in a chat
const (
	Creator       = "creator"
	Administrator = "administrator"
	Member        = "member"
)

/*

------callbacks------
---my---
my:select:*bk.ID*
my:back


*/

func (h *Handler) getRole(ctx context.Context, userID int64) (string, error) {
	if h.cfg.GroupChatID == 0 {
		return "", fmt.Errorf("GroupChatID is not set in config")
	}

	cfg := tgbotapi.GetChatMemberConfig{
		ChatConfigWithUser: tgbotapi.ChatConfigWithUser{
			ChatID: h.cfg.GroupChatID,
			UserID: userID,
		},
	}

	if err := ctx.Err(); err != nil {
		h.log.Warn("Context canceled in GetRole", "user_id", userID, "err", err)
		return "", err
	}

	m, err := h.bot.GetChatMember(cfg)
	if err != nil {
		h.log.Error("GetChatMember failed", "error", err)
		return "", err
	}

	return m.Status, nil
}

func (h *Handler) notifyAdmin(msg string) {
	escaped := EscapeMarkdownV2(msg)
	adminMsg := tgbotapi.NewMessage(AdminID, escaped)
	adminMsg.ParseMode = "MarkdownV2"

	if _, err := h.bot.Send(adminMsg); err != nil {
		h.log.Error("Failed to notify admin", "err", err)
	}
}

// EscapeMarkdownV2 –±–µ–∑–æ–ø–∞—Å–Ω–æ —ç–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –¥–ª—è Telegram MarkdownV2
func EscapeMarkdownV2(text string) string {
	var b strings.Builder

	// –°–ø–∏—Å–æ–∫ —Å–∏–º–≤–æ–ª–æ–≤, —Ç—Ä–µ–±—É—é—â–∏—Ö —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤ MarkdownV2
	escapeChars := map[rune]bool{
		'_': true, '[': true, ']': true, '(': true, ')': true,
		'~': true, '`': true, '>': true, '#': true, '+': true, '-': true,
		'=': true, '|': true, '{': true, '}': true, '.': true, '!': true,
		'\\': true,
	}

	for _, r := range text {
		if escapeChars[r] {
			b.WriteRune('\\')
		}
		b.WriteRune(r)
	}

	return b.String()
}

func getStartMessageText() string {
	return `üëã *–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–æ–∫.*

ü¶æ *–í–æ—Ç, —á—Ç–æ —è –º–æ–≥—É:*

üìù ‚Ä¢ *–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å* ‚Äî –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–∫—É  
üìã ‚Ä¢ *–ú–æ–∏ –±—Ä–æ–Ω–∏* ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –±—Ä–æ–Ω–µ–π  
üìÖ ‚Ä¢ *–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ* ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –∑–∞–Ω—è—Ç–æ—Å—Ç—å –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–æ–∫  
üìñ ‚Ä¢ *–ü–æ–º–æ—â—å* ‚Äî –ü–æ–¥—Ä–æ–±–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞ –æ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥–∞—Ö`
}

func getHelpMessageText() string {
	return `üëã *–û–ø–∏—Å–∞–Ω–∏–µ –≤—Å–µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞:*

üìù ‚Ä¢ *–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å* ‚Äî –≤—ã–±–µ—Ä–∏ —É–¥–æ–±–Ω—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –¥–ª—è –≤—Å—Ç—Ä–µ—á–∏  
üìã ‚Ä¢ *–ú–æ–∏ –±—Ä–æ–Ω–∏* ‚Äî –ø–æ–∫–∞–∂—É —Å–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –±—Ä–æ–Ω–µ–π —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –∏—Ö *–æ—Ç–º–µ–Ω–∏—Ç—å* –∏–ª–∏ *–ø–µ—Ä–µ–Ω–µ—Å—Ç–∏*  
üìÖ ‚Ä¢ *–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ* ‚Äî –ø–æ–∫–∞–∂—É –∑–∞–Ω—è—Ç–æ—Å—Ç—å –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–æ–∫ –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é  
üìñ ‚Ä¢ *–°–ø—Ä–∞–≤–∫–∞* ‚Äî –ø–æ–∫–∞–∂—É —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ`
}

func getAdminStartMessageText() string {
	return "*–°–æ–∑–¥–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É* / *–£–¥–∞–ª–∏—Ç—å –∫–æ–º–Ω–∞—Ç—É* ‚Äî –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–Ω–∞—Ç–∞–º–∏"
}

func getAdminHelpMessageText() string {
	return "üõ†Ô∏è ‚Ä¢ *–°–æ–∑–¥–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É* / *–£–¥–∞–ª–∏—Ç—å –∫–æ–º–Ω–∞—Ç—É* ‚Äî –¥–æ—Å—Ç—É–ø–Ω—ã –∏ –≤–∏–¥–Ω—ã —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º —á–∞—Ç–∞ –ö–æ–ª–ª–µ–≥–∏–∏"
}
