version: "3.9"

services:
  db:
    image: postgres:16-alpine
    container_name: bookingbot-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-booking}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB} -h 127.0.0.1 || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 10
    # Порт наружу не обязателен; раскомментируй для доступа с хоста:
    # ports:
    #   - "5432:5432"

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bookingbot-app
    depends_on:
      db:
        condition: service_healthy
    # Прокидываем переменные окружения из .env (TELEGRAM_TOKEN, TELEGRAM_OFFICE_TZ и т.п.)
    env_file:
      - .env
    environment:
      # Эти переменные твой config.BindEnv читает в database.*:
      POSTGRES_HOST: db
      POSTGRES_PORT: "5432"
      # Остальные (POSTGRES_USER/PASSWORD/DB, TELEGRAM_TOKEN, TELEGRAM_GROUP_CHAT_ID, TELEGRAM_OFFICE_TZ)
      # возьмутся из .env благодаря env_file.
    volumes:
      # ВАЖНО: грузим конфиг и .env туда, где их ищет твой загрузчик — в /src
      - ./config.yaml:/src/config.yaml:ro
      - ./.env:/src/.env:ro
    restart: unless-stopped
    # Порты не нужны для long polling.
    # Если когда-нибудь перейдёшь на webhook, добавь здесь маппинг, например:
    # ports:
    #   - "8080:8080"

volumes:
  db-data:
